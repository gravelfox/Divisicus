@{
    ViewBag.Title = "Divisicus";
}
@model Divisicus.Persistence.Player

@Scripts.Render("~/bundles/knockout")
@Scripts.Render("~/bundles/jquery")

<style type="text/css">
    .btn-fixed{
        width: 40px;
    }

</style>


<div class="container">
    <div class="row col-md-12">
        &nbsp;
    </div>
    <div class="row">
        <div class="col-xs-6">
            <input type="button" value="Begin Salvo" data-bind="click: beginSalvo" class="btn btn-default" id="startButton"/>
            <h2 data-bind="text: target">&nbsp;</h2>
        </div>
        <div class="col-xs-6">
            <h2 id="timer">&nbsp;</h2>
        </div>
    </div>
    <h3>Find its two divisors:</h3>
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-10 col-xs-12">
           
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button1" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[0]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button2" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[1]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button3" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[2]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button4" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[3]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button5" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[4]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button6" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[5]" />
            </div>
        </div>
    </div>
    &nbsp;
    <div class="row">
        <div class="col-lg-6 col-md-8 col-sm-10 col-xs-12">
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button7" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[6]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button8" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[7]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button9" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[8]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button10" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[9]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button11" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[10]" />
            </div>
            <div class="col-xs-2 col-sm-1 text-center">
                <input type="button" class="btn btn-fixed btn-default" id="button12" onclick="selectNumber.call(this)" data-bind="value: numbersInPlay()[11]" />
            </div>
        </div>
    </div>
    <p>&nbsp;</p>
    <h4 data-bind="text: 'Score: ' + score()"></h4>
    <span id="level" data-bind="text: 'Level: ' + level" style="vertical-align:bottom"></span><br />
    <span id="highScore" data-bind="text: 'High Score: ' + highScore" style="vertical-align:bottom"></span>
</div>
<script>

    var viewModel = {
        target: ko.observable(),
        level: ko.observable(),
        selections: ko.observableArray(),
        score: ko.observable(0),
        highScore: ko.observable(),
        numbersInPlay: ko.observableArray()
    };
    viewModel.score(0);
    viewModel.target(" ");
    viewModel.highScore = @Model.HighScore;
    viewModel.level = @Model.Level;

</script>

@Scripts.Render("~/bundles/GameLogic")

